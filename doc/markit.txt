*markit.txt*         For Neovim >= 0.8.0         Last change: 2025 February 19

==============================================================================
Table of Contents                                   *markit-table-of-contents*

  - Features                                                 |markit-features|
  - Setup                                                       |markit-setup|
  - Usage                                                       |markit-usage|
  - What’s Next                                       |markit-what’s-next|
  - Behind The Code                                   |markit-behind-the-code|

markit.nvim enhances marks experience in neovim, making it easier to navigate
and manage marks across projects.


FEATURES                                                     *markit-features*

- View marks in the sign column
- Add, delete, and toggle marks
- Cycle between marks
- Preview marks in floating windows
- Extract marks to quickfix/location list
- Set bookmarks with sign/virtual text annotations
- Quick navigation across buffers
- Telescope integration for marks and bookmarks


SETUP                                                           *markit-setup*


REQUIREMENTS ~

- Neovim >= 0.6.0


INSTALLATION ~

With lazy.nvim

>lua
    {
        '2kabhishek/markit.nvim',
        config = load_config('tools.marks'),
        event = { 'BufReadPre', 'BufNewFile' },
    },
<


CONFIGURATION ~

>lua
    require'marks'.setup {
      -- whether to map keybinds or not. default true
      default_mappings = true,
      -- which builtin marks to show. default {}
      builtin_marks = { ".", "<", ">", "^" },
      -- whether movements cycle back to the beginning/end of buffer. default true
      cyclic = true,
      -- whether the shada file is updated after modifying uppercase marks. default false
      force_write_shada = false,
      -- how often (in ms) to redraw signs/recompute mark positions. 
      -- higher value means better performance but may cause visual lag,
      -- while lower value may cause performance penalties. default 150.
      refresh_interval = 150,
      -- sign priorities for each type of mark - builtin marks, uppercase marks, lowercase
      -- marks, and bookmarks.
      -- can be either a table with all/none of the keys, or a single number, in which case
      -- the priority applies to all marks.
      -- default 10.
      sign_priority = { lower=10, upper=15, builtin=8, bookmark=20 },
      -- disables mark tracking for specific filetypes. default {}
      excluded_filetypes = {},
      -- disables mark tracking for specific buftypes. default {}
      excluded_buftypes = {},
      -- marks.nvim allows you to configure up to 10 bookmark groups, each with its own
      -- sign/virttext. Bookmarks can be used to group together positions and quickly move
      -- across multiple buffers. default sign is '!@#$%^&*()' (from 0 to 9), and
      -- default virt_text is "".
      bookmark_0 = {
        sign = "⚑",
        virt_text = "hello world",
        -- explicitly prompt for a virtual line annotation when setting a bookmark from this group.
        -- defaults to false.
        annotate = false,
      },
      mappings = {}
    }
<


USAGE                                                           *markit-usage*


BUILTIN MARKS ~

The `builtin_marks` option allows you to track and show vim’s builtin marks
in the sign column. These marks will update automatically when the cursor
moves.

Supported builtin marks: - `"'"` - Last jump - `"^"` - Last insertion stop
position - `"."` - Last change - `"<"` - Start of last visual selection - `">"`
- End of last visual selection


BOOKMARKS ~

Bookmarks are unnamed markers tied to a particular (buffer, line, col) triple.
Unlike regular marks, bookmarks can have signs or virtual text annotations
attached to them. They are useful for remembering positions across buffers
without using uppercase marks.

For example, you might set two bookmarks to quickly toggle back and forth
between a function and its corresponding unit test in another file.

markit.nvim supports up to 10 bookmark groups (0-9), each with its own optional
sign text and virtual text annotations.


COMMANDS ~

markit.nvim defines the following commands:

`:MarksToggleSigns[ buffer]` Toggle signs globally. Also accepts an optional
buffer number to toggle signs for that buffer only.

`:MarksListBuf` Fill the location list with all marks in the current buffer.

`:MarksListGlobal` Fill the location list with all global marks in open
buffers.

`:MarksListAll` Fill the location list with all marks in all open buffers.

`:BookmarksList group_number` Fill the location list with all bookmarks of
group "group_number".

`:BookmarksListAll` Fill the location list with all bookmarks, across all
groups.

There are also corresponding commands for those who prefer the quickfix list:

`:MarksQFListBuf` `:MarksQFListGlobal` `:MarksQFListAll` `:BookmarksQFList
group_number` `:BookmarksQFListAll`


HIGHLIGHTS ~

markit.nvim defines the following highlight groups:

`MarkSignHL` The highlight group for displayed mark signs. `MarkSignNumHL` The
highlight group for the number line in a signcolumn. `MarkSignLineHL` The
highlight group for the whole line the sign is placed in. `MarkVirtTextHL` The
highlight group for bookmark virtual text annotations.


TELESCOPE INTEGRATION ~

There’s a telescope extension allowing to list marks through telescope.

To activate it you need to load the extension:

>lua
    telescope.load_extension("marks_nvim")
<

You can then use the extension methods to list marks instead of using the
native loclist system:

>lua
    require('telescope').extensions.marks_nvim.marks_list_buf(opts) -- List buffer marks
    require('telescope').extensions.marks_nvim.marks_list_all(opts) -- List all marks
    require('telescope').extensions.marks_nvim.bookmarks_list_group(1, opts) -- List a bookmark group marks
    require('telescope').extensions.marks_nvim.bookmarks_list_all(opts) -- List all bookmarks marks
<


WHAT’S NEXT                                           *markit-what’s-next*


TO-DO ~

- Better telescope previews
- Custom notes for bookmarks
- Export bookmarks as markdown


BEHIND THE CODE                                       *markit-behind-the-code*


INSPIRATION ~

This is a fork of marks.nvim <https://github.com/chentoast/marks.nvim> with
some fixes and improvements from the community.


TOOLING ~

- dots2k <https://github.com/2kabhishek/dots2k> — Dev Environment
- nvim2k <https://github.com/2kabhishek/nvim2k> — Personalized Editor


MORE INFO ~

- marks.nvim <https://github.com/chentoast/marks.nvim> Inspiration and base for this project


Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
